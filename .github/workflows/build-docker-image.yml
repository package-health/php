name: Build Docker Image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
      - 'develop'
    paths-ignore:
      - '.github/**'

jobs:

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:

      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to GitHub container registry
        uses: docker/login-action@6af3c118c8376c675363897acf1757f7a9be6583
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Build
        id: prepare-build
        run: |
            echo "::set-output name=short::$(git rev-parse --short HEAD)"
            if [[ "${{ github.ref_name }}" == "main" ]]; then
              echo "::set-output name=environment::prod";
            else
              echo "::set-output name=environment::dev";
            fi

      # TODO: maybe we can use a build matrix for parallel builds
      # About the cache:
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#cache-backend-api
      - name: Build NGINX Docker Image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          push: true
          build-args:
            "VERSION=${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}"
          tags: ghcr.io/package-health/nginx:${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}
          file: ./docker/nginx.Dockerfile
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build PHP-FPM Docker Image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          push: true
          build-args:
            "VERSION=${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}"
          tags: ghcr.io/package-health/php-fpm:${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}
          file: ./docker/php.Dockerfile
          target: fpm
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build PHP-CLI Docker Image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          push: true
          build-args:
            "VERSION=${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}"
          tags: ghcr.io/package-health/php-cli:${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}
          file: ./docker/php.Dockerfile
          target: cli
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          name: "php.package.health ${{ steps.prepare-build.outputs.environment }}-${{ steps.prepare-build.outputs.short }}"
          tag_name: "${{ steps.prepare-build.outputs.environment }}@${{ steps.prepare-build.outputs.short }}"
          target_commitish: ${{ github.sha }}
          generate_release_notes: true

  update-infra:
    needs: docker
    runs-on: ubuntu-latest

    steps:

      - name: Set up variables
        id: repo-vars
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "::set-output name=environment::prod"
          else
            echo "::set-output name=environment::dev"
          fi

      - name: Send update to infrastructure repository
        uses: peter-evans/repository-dispatch@11ba7d3f32dc7cc919d1c43f1fec1c05260c26b5
        # the token is a personal access token with "repo" scope
        with:
          token: ${{ secrets.INFRA_REPO_ACCESS_TOKEN }}
          repository: package-health/infra-service
          event-type: deploy-new-version
          client-payload: '{"sha": "${{ github.sha }}", "environment": "${{ steps.repo-vars.outputs.environment }}"}'
